@page "{username}"
@model KTU_forum.Pages.PublicProfileModel
@{
    var user = Model.ProfileUser;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>@user.Username's Profile - KTU Forum</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Custom Google font-->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@100;200;300;400;500;600;700;800;900&amp;display=swap" rel="stylesheet" />
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="~/css/styles.css" rel="stylesheet" />
    <style>
        .online-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-right: 5px;
        }

            .online-indicator.online {
                background-color: #28a745; /* Green */
            }

            .online-indicator.offline {
                background-color: #6c757d; /* Gray */
            }

        .status-text {
            font-size: 0.9rem;
            color: #6c757d;
        }
    </style>
</head>
<body class="d-flex flex-column">
    <main class="flex-shrink-0">
        <!-- Page content-->
        <section class="py-5">
            <div class="container px-5">
                <div class="text-center mb-5">
                    <h1 class="display-5 fw-bolder mb-0"><span class="text-gradient d-inline">@user.Username's Profile</span></h1>
                </div>
                <div class="row justify-content-center">
                    <!-- Profile Picture and Username Section -->
                    <div class="col-md-8 text-center">
                        @if (string.IsNullOrEmpty(user.ProfilePicturePath))
                        {
                            <i class="bi bi-person-circle" style="font-size: 9rem;"></i> <!-- Default Profile Icon -->
                        }
                        else
                        {
                            <img src="@user.ProfilePicturePath" alt="Profile Picture" class="rounded-circle" style="width: 9rem; height: 9rem; object-fit: cover;" />
                        }
                        <h3 class="mt-3 d-flex justify-content-center align-items-center">
                            @user.Username
                            @if (!string.IsNullOrEmpty(user.Role))
                            {
                                <span class="badge bg-success text-white ms-2" style="opacity: 0.4; font-size: 1rem;">@user.Role</span>
                            }
                        </h3>

                        <!-- Online Status -->
                        <div class="d-flex justify-content-center align-items-center mt-2" id="userStatusContainer">
                            <span class="online-indicator offline" id="statusIndicator"></span>
                            <span class="status-text" id="statusText">Checking status...</span>
                        </div>
                    </div>
                </div>

                <div class="row justify-content-center mt-4">
                    <div class="col-md-8">
                        <div class="card">
                            <div class="card-body">
                                <!-- User Bio Section -->
                                @if (!string.IsNullOrEmpty(user.Bio))
                                {
                                    <div class="mb-4">
                                        <h4>About</h4>
                                        <p>@user.Bio</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="mb-4 text-center">
                                        <p class="text-muted">This user hasn't added a bio yet.</p>
                                    </div>
                                }

                                <!-- User Statistics Section (Optional - could add forum stats here) -->
                                <div class="row text-center mt-4">
                                    <div class="col">
                                        <h5>Member Since</h5>
                                        <p>@(user.CreatedAt != default ? user.CreatedAt.ToString("MMM dd, yyyy") : "N/A")</p>
                                    </div>
                                </div>

                                <!-- Back Button -->
                                <div class="text-center mt-4">
                                    <a href="javascript:history.back()" class="btn btn-primary">Back</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="~/js/scripts.js"></script>

    <!-- Online Status Check Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const profileUsername = '@user.Username';
            const statusIndicator = document.getElementById('statusIndicator');
            const statusText = document.getElementById('statusText');

            function checkUserStatus() {
                fetch('/OnlineUsers')
                    .then(response => response.json())
                    .then(data => {
                        // Check if the user is in the online users list
                        const isOnline = data.some(user => user.username === profileUsername);

                        // Update the status indicator and text
                        if (isOnline) {
                            statusIndicator.classList.remove('offline');
                            statusIndicator.classList.add('online');
                            statusText.textContent = 'Currently Online';
                        } else {
                            statusIndicator.classList.remove('online');
                            statusIndicator.classList.add('offline');
                            statusText.textContent = 'Currently Offline';
                        }
                    })
                    .catch(error => {
                        console.error('Error checking user status:', error);
                        statusText.textContent = 'Status unavailable';
                    });
            }

            // Check status on page load
            checkUserStatus();

            // Refresh status every 30 seconds
            setInterval(checkUserStatus, 30000);
        });
    </script>
</body>
</html>